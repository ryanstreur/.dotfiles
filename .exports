################################################################################
# User configuration
################################################################################

export EDITOR=nvim


################################################################################
# Installed-Software-Specific
################################################################################

# Pyenv
export PYENV_ROOT="$HOME/.pyenv"
export PATH="$PYENV_ROOT/bin:$PATH"
if command -v pyenv 1>/dev/null 2>&1; then
  eval "$(pyenv init -)"
fi

# NVM
export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

# Deno
export DENO_INSTALL=$HOME/.deno
export PATH="$DENO_INSTALL/bin:$PATH"

export SPACEVIMDIR=$HOME/.dotfiles/.SpaceVim.d/
export GTAGSLABEL=pygments

export GOPATH=$HOME/go-work

# The following is required for YouCompleteMe with Pyenv
export PYTHON_CONFIGURE_OPTS="--enable-shared"

export DJANGO_READ_DOT_ENV_FILE=True

env=~/.ssh/agent.env

agent_load_env () { test -f "$env" && . "$env" >| /dev/null ; }

agent_start () {
      (umask 077; ssh-agent >| "$env")
          . "$env" >| /dev/null ; }

          agent_load_env

# agent_run_state: 0=agent running w/ key; 1=agent w/o key; 2= agent not running
agent_run_state=$(ssh-add -l >| /dev/null 2>&1; echo $?)

if [ ! "$SSH_AUTH_SOCK" ] || [ $agent_run_state = 2 ]; then
  agent_start
    ssh-add
elif [ "$SSH_AUTH_SOCK" ] && [ $agent_run_state = 1 ]; then
  ssh-add
fi

unset env
